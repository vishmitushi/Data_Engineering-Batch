CREATE DATABASE coding_challenge;
use coding_challenge;

CREATE TABLE DEPARTMENT(
Dept_NO INT PRIMARY KEY,
Dept_NAME VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE EMPLOYEES(
Employee_ID INT PRIMARY KEY,
Employee_NAME VARCHAR(50),
Dept_NO INT,
SALARY INT,
MANAGER_ID INT,
CITY VARCHAR(50),
FOREIGN KEY(Dept_NO) REFERENCES DEPARTMENT(Dept_NO) ON DELETE CASCADE
);

INSERT INTO DEPARTMENT(Dept_NO,Dept_NAME) VALUES
(100,'IT'),
(101,'SALES'),
(102,'MARKETING'),
(103,'ACCOUNT'),
(104,'ADMIN'),
(105,'RD'),
(106,'FINANCE');

INSERT INTO EMPLOYEES VALUES
(1,'KARTIK',100,60000,NULL,'BANGALORE'),
(2,'SOMYA',101,67000,1,'BANGALORE'),
(3,'RAJNIKANT',100,60000,1,'CHENNAI'),
(4,'PRABHAKARAN',100,80000,1,'CHENNAI'),
(5,'MANISH',103,80000,2,'DELHI'),
(6,'KARTIK',103,50000,3,'DELHI'),
(7,'RAJEEV',104,80000,3,'DELHI'),
(8,'SAKTI',102,70000,5,'HYDERABAD'),
(10,'NAMAN',NULL,70000,5,'HYDERABAD');

SELECT * FROM DEPARTMENT;
SELECT * FROM EMPLOYEES;

-- Execute OVER and PARTITION BY Clause in SQL Queries
-- Department wise average salary
SELECT DISTINCT AVG(Salary) OVER (PARTITION BY Dept_NAME ) as DEPT_AVG,
Dept_NAME FROM EMPLOYEES 
JOIN DEPARTMENT ON DEPARTMENT.Dept_NO = EMPLOYEES.Dept_NO;

-- creating subtotals &Total Aggregations using SQL Queries.
-- Department wise total and average salary

SELECT  
CASE 
WHEN GROUPING(Dept_NAME)= 1 then 'Grand Total'
WHEN GROUPING(Employee_NAME)= 1 then 'Sub Total'
ELSE Dept_NAME
END AS DEPT_NAME, Employee_NAME, SUM(salary) AS TotalSalary, AVG(salary) AS AvgSalary FROM EMPLOYEES
JOIN DEPARTMENT on DEPARTMENT.Dept_NO = EMPLOYEES.Dept_NO
GROUP BY Dept_NAME,Employee_NAME WITH ROLLUP;

-- Execute all the join with examples.
-- INNER JOIN
SELECT Employee_NAME, DEPT_NAME FROM EMPLOYEES AS E
INNER JOIN DEPARTMENT AS D ON D.Dept_NO = E.Dept_NO;

-- LEFT JOIN
SELECT Employee_NAME, DEPT_NAME FROM EMPLOYEES AS E
LEFT JOIN DEPARTMENT AS D ON D.Dept_NO = E.Dept_NO;

-- RIGHT JOIN
SELECT Employee_NAME, DEPT_NAME FROM EMPLOYEES AS E
RIGHT JOIN DEPARTMENT AS D ON D.Dept_NO = E.Dept_NO;

-- FULL JOIN
SELECT Employee_NAME, DEPT_NAME FROM EMPLOYEES AS E
LEFT JOIN DEPARTMENT AS D ON D.Dept_NO = E.Dept_NO
UNION
SELECT Employee_NAME, DEPT_NAME FROM EMPLOYEES AS E
RIGHT JOIN DEPARTMENT AS D ON D.Dept_NO = E.Dept_NO;

-- CROSS JOIN
SELECT Employee_NAME, DEPT_NAME FROM EMPLOYEES AS E
CROSS JOIN DEPARTMENT AS D ON D.Dept_NO = E.Dept_NO;

-- NON-EQUI JOIN
SELECT Employee_NAME, DEPT_NAME FROM EMPLOYEES AS E
JOIN DEPARTMENT AS D ON D.Dept_NO > E.Dept_NO;

-- SELF JOIN
SELECT E1.Employee_NAME AS EMPLOYEE, E2.Employee_NAME AS MANAGER FROM EMPLOYEES AS E1
LEFT JOIN EMPLOYEES AS E2 ON E2.Employee_ID = E1.Manager_ID;



